<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>ch.bfh.ti</groupId>
	<artifactId>academia-03</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<url>https://academia.org</url>

	<properties>
		<!-- General properties -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.target>11</maven.compiler.target>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.release>11</maven.compiler.release>

		<!-- Version properties -->
		<servlet.version>3.1.0</servlet.version>
		<jackson.version>2.11.0</jackson.version>
		<postgresql.version>42.2.16</postgresql.version>
		<jetty.version>9.4.36.v20210114</jetty.version>
		<h2.version>1.4.200</h2.version>
		<junit.version>5.6.2</junit.version>
		<rest-assured.version>4.3.1</rest-assured.version>

		<!-- Checkstyle properties -->
		<checkstyle.config.location>src/etc/checkstyle.xml</checkstyle.config.location>
		<checkstyle.header.file>src/etc/checkstyle-header.txt</checkstyle.header.file>
	</properties>

	<dependencies>
		<!-- Servlet dependencies -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<!-- Persistence dependencies -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${rest-assured.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.3.1</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.9.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>site</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/target/site/images</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/src/site/markdown/images</directory>
									<includes>
										<include>*.gif</include>
										<include>*.jpg</include>
										<include>*.png</include>
										<include>*.svg</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>prod</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<database.driver>org.postgresql.Driver</database.driver>
				<database.url>jdbc:postgresql://localhost/academia</database.url>
				<database.user>postgres</database.user>
				<database.password>postgres</database.password>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.postgresql</groupId>
					<artifactId>postgresql</artifactId>
					<version>${postgresql.version}</version>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>test</id>
			<properties>
				<database.driver>org.h2.Driver</database.driver>
				<database.url>
					jdbc:h2:mem:academia;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;\
					DB_CLOSE_DELAY=-1;INIT=RUNSCRIPT FROM 'src/etc/create.sql'\\;RUNSCRIPT FROM 'src/etc/init.sql'
				</database.url>
				<database.user>postgres</database.user>
				<database.password>postgres</database.password>
			</properties>
			<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<version>${h2.version}</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.22.2</version>
						<configuration>
							<!--suppress UnresolvedMavenProperty-->
							<argLine>${unitTestArgLine}</argLine>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.22.2</version>
						<executions>
							<execution>
								<id>integration-test</id>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
								<configuration>
									<!--suppress UnresolvedMavenProperty-->
									<argLine>${integrationTestArgLine}</argLine>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.8.6</version>
						<executions>
							<execution>
								<id>prepare-unit-test-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<propertyName>unitTestArgLine</propertyName>
								</configuration>
							</execution>
							<execution>
								<id>prepare-integration-test-agent</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>prepare-agent-integration</goal>
								</goals>
								<configuration>
									<propertyName>integrationTestArgLine</propertyName>
								</configuration>
							</execution>
							<execution>
								<id>merge-results</id>
								<phase>verify</phase>
								<goals>
									<goal>merge</goal>
								</goals>
								<configuration>
									<fileSets>
										<fileSet>
											<directory>${project.build.directory}</directory>
											<includes>
												<include>*.exec</include>
											</includes>
										</fileSet>
									</fileSets>
								</configuration>
							</execution>
							<execution>
								<id>generate-report</id>
								<phase>verify</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-maven-plugin</artifactId>
						<version>${jetty.version}</version>
						<configuration>
							<httpConnector>
								<port>8080</port>
							</httpConnector>
							<stopPort>9090</stopPort>
							<stopKey>stop</stopKey>
							<stopWait>10</stopWait>
						</configuration>
						<executions>
							<execution>
								<id>start-jetty</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>run-forked</goal>
								</goals>
								<configuration>
									<!--suppress UnresolvedMavenProperty-->
									<jvmArgs>${integrationTestArgLine}</jvmArgs>
									<waitForChild>false</waitForChild>
								</configuration>
							</execution>
							<execution>
								<id>stop-jetty</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>test-local</id>
			<properties>
				<database.driver>org.h2.Driver</database.driver>
				<database.url>
					jdbc:h2:mem:academia;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;\
					DB_CLOSE_DELAY=-1;INIT=RUNSCRIPT FROM 'src/etc/create.sql'\\;RUNSCRIPT FROM 'src/etc/init.sql'
				</database.url>
				<database.user>postgres</database.user>
				<database.password>postgres</database.password>
			</properties>
			<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<version>${h2.version}</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.22.2</version>
						<configuration>
							<!--suppress UnresolvedMavenProperty-->
							<argLine>${unitTestArgLine}</argLine>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.22.2</version>
						<executions>
							<execution>
								<id>integration-test</id>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-maven-plugin</artifactId>
						<version>${jetty.version}</version>
						<configuration>
							<httpConnector>
								<port>8080</port>
							</httpConnector>
							<stopPort>9090</stopPort>
							<stopKey>stop</stopKey>
							<stopWait>10</stopWait>
						</configuration>
						<executions>
							<execution>
								<id>start-jetty</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>stop-jetty</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>3.1.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.2.0</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.6</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.1.1</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

</project>
